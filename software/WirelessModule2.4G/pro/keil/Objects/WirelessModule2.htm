<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\WirelessModule2.4G]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\WirelessModule2.4G</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue Feb 28 20:42:23 2017
<BR><P>
<H3>Maximum Stack Usage =       1088 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USART1_IRQHandler &rArr; HalUartDataCallback &rArr; MProtoRecvByte &rArr; mprotoFrameHandle &rArr; WMNetUserDataSend &rArr; NetUserDataSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[10]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[d]">DMA1_Channel1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[e]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[f]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from halflash.o(i.FLASH_IRQHandler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[19]">I2C2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1b]">SPI2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f030.o(.text)
 <LI><a href="#[14]">TIM14_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[15]">TIM15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[16]">TIM16_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[17]">TIM17_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from haltimer.o(i.TIM3_IRQHandler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1c]">USART1_IRQHandler</a> from haluart.o(i.USART1_IRQHandler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1d]">USART2_IRQHandler</a> from haluart.o(i.USART2_IRQHandler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f030.o(.text)
 <LI><a href="#[2a]">delayReportDeviceInfo</a> from wirelessmodule.o(i.delayReportDeviceInfo) referenced from wirelessmodule.o(i.wmNetlayerEventHandle)
 <LI><a href="#[2b]">delayStartHeartbeat</a> from wirelessmodule.o(i.delayStartHeartbeat) referenced from wirelessmodule.o(i.wmNetlayerEventHandle)
 <LI><a href="#[26]">dmEventHandle</a> from wirelessmodule.o(i.dmEventHandle) referenced from wirelessmodule.o(i.WMInitialize)
 <LI><a href="#[29]">fputc</a> from halcommon.o(i.fputc) referenced from printf8.o(i.__0printf$8)
 <LI><a href="#[1e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[21]">mprotoEventHandle</a> from mproto.o(i.mprotoEventHandle) referenced from mproto.o(i.MProtoInitialize)
 <LI><a href="#[27]">netBuildDone</a> from wirelessmodule.o(i.netBuildDone) referenced from wirelessmodule.o(i.WMNetBuildAddDevice)
 <LI><a href="#[27]">netBuildDone</a> from wirelessmodule.o(i.netBuildDone) referenced from wirelessmodule.o(i.searchDeviceAgain)
 <LI><a href="#[23]">netBuildFrameHandle</a> from netlayer.o(i.netBuildFrameHandle) referenced from netlayer.o(i.NetLayerInit)
 <LI><a href="#[22]">netHeartbeatHandle</a> from netlayer.o(i.netHeartbeatHandle) referenced from netlayer.o(i.NetLayerInit)
 <LI><a href="#[24]">netOperateFrameHandle</a> from netlayer.o(i.netOperateFrameHandle) referenced from netlayer.o(i.NetLayerInit)
 <LI><a href="#[28]">searchDeviceAgain</a> from wirelessmodule.o(i.searchDeviceAgain) referenced from wirelessmodule.o(i.WMNetBuildSearch)
 <LI><a href="#[25]">wmNetlayerEventHandle</a> from wirelessmodule.o(i.wmNetlayerEventHandle) referenced from wirelessmodule.o(i.WMInitialize)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[34]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[100]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[101]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[102]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[103]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[104]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[105]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataListHandle
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameSend
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoEventHandle
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildSearchResponse
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildSearchDevice
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildAddDevice
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetUserDataSend
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCoordinationOperate
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashWrite
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashRead
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMGetRelatedDeviceType
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMGetOnlineDeviceType
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceSet
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceCreate
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetModuleType
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMGetSearchResult
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMDeviceCoordination
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchDeviceInfoAdd
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPacketRecvHandle
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataSend
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSetSegAddr
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSetMac
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYOperatePacketSend
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYHeartbeatSend
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYGetMac
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYEstnetPacketSend
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataSave
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netOperateFrameHandle
</UL>

<P><STRONG><a name="[106]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashWrite
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceDel
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[108]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[e5]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRecvDataHandle
</UL>

<P><STRONG><a name="[10a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[c2]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPacketRecvHandle
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYEstnetPacketSend
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[10b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[10c]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[10d]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>DMDeviceAddressFind</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, devicesmanager.o(i.DMDeviceAddressFind))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoEventHandle
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMUpdateHeartbeat
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetUserDataSend
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildDelDevice
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMDeviceCoordination
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnDecrypt
</UL>

<P><STRONG><a name="[35]"></a>DMDeviceCreate</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, devicesmanager.o(i.DMDeviceCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = DMDeviceCreate &rArr; updateDeviceInfoToFlash &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfoToFlash
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
</UL>

<P><STRONG><a name="[38]"></a>DMDeviceDel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, devicesmanager.o(i.DMDeviceDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = DMDeviceDel &rArr; updateDeviceInfoToFlash &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfoToFlash
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildDelDevice
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
</UL>

<P><STRONG><a name="[39]"></a>DMDeviceInfoClear</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, devicesmanager.o(i.DMDeviceInfoClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DMDeviceInfoClear &rArr; HalFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashErase
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetInfoClear
</UL>

<P><STRONG><a name="[3b]"></a>DMDeviceSet</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, devicesmanager.o(i.DMDeviceSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = DMDeviceSet &rArr; updateDeviceInfoToFlash &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfoToFlash
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
</UL>

<P><STRONG><a name="[e2]"></a>DMDeviceUidToAddress</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, devicesmanager.o(i.DMDeviceUidToAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMDeviceUidToAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
</UL>

<P><STRONG><a name="[de]"></a>DMEventRegister</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, devicesmanager.o(i.DMEventRegister))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
</UL>

<P><STRONG><a name="[3c]"></a>DMGetOnlineDeviceType</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, devicesmanager.o(i.DMGetOnlineDeviceType))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMGetOnlineDeviceType
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMQueryDeviceInfo
</UL>

<P><STRONG><a name="[3d]"></a>DMGetRelatedDeviceType</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, devicesmanager.o(i.DMGetRelatedDeviceType))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMGetRelatedDeviceType
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMQueryDeviceInfo
</UL>

<P><STRONG><a name="[3e]"></a>DMInitialize</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, devicesmanager.o(i.DMInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMInitialize &rArr; HalFlashRead
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashRead
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
</UL>

<P><STRONG><a name="[40]"></a>DMPoll</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, devicesmanager.o(i.DMPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMPoll &rArr; heartbeatPoll
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartbeatPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMPoll
</UL>

<P><STRONG><a name="[42]"></a>DMUpdateHeartbeat</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, devicesmanager.o(i.DMUpdateHeartbeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMUpdateHeartbeat &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceAddressFind
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
</UL>

<P><STRONG><a name="[5b]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashWrite
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashErase
</UL>

<P><STRONG><a name="[46]"></a>FLASH_ErasePage</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f0xx_flash.o(i.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashErase
</UL>

<P><STRONG><a name="[49]"></a>FLASH_GetStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, halflash.o(i.FLASH_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_IRQHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>FLASH_Lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashWrite
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashErase
</UL>

<P><STRONG><a name="[4e]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_PrefetchBufferCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[48]"></a>FLASH_ProgramWord</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, stm32f0xx_flash.o(i.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashWrite
</UL>

<P><STRONG><a name="[4f]"></a>FLASH_SetLatency</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[5a]"></a>FLASH_Unlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_flash.o(i.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashWrite
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashErase
</UL>

<P><STRONG><a name="[47]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, stm32f0xx_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[63]"></a>GPIO_Init</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiInitialize
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOInit
</UL>

<P><STRONG><a name="[74]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f0xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiInitialize
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartInit
</UL>

<P><STRONG><a name="[61]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOGet
</UL>

<P><STRONG><a name="[65]"></a>GPIO_WriteBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
</UL>

<P><STRONG><a name="[4a]"></a>HalClkInit</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, halclk.o(i.HalClkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HalClkInit &rArr; RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLKConfig
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInitialize
</UL>

<P><STRONG><a name="[3a]"></a>HalFlashErase</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, halflash.o(i.HalFlashErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HalFlashErase &rArr; FLASH_ErasePage &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfoToFlash
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceInfoClear
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetInfoClear
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
</UL>

<P><STRONG><a name="[6b]"></a>HalFlashInitialize</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, halflash.o(i.HalFlashInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInitialize
</UL>

<P><STRONG><a name="[72]"></a>HalFlashPoll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, halflash.o(i.HalFlashPoll))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalPoll
</UL>

<P><STRONG><a name="[3f]"></a>HalFlashRead</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, halflash.o(i.HalFlashRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HalFlashRead
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMInitialize
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
</UL>

<P><STRONG><a name="[5d]"></a>HalFlashWrite</STRONG> (Thumb, 108 bytes, Stack size 288 bytes, halflash.o(i.HalFlashWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashWrite
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfoToFlash
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
</UL>

<P><STRONG><a name="[5f]"></a>HalGPIOGet</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, halgpio.o(i.HalGPIOGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HalGPIOGet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numToGPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01TxPacket
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01DataRecved
</UL>

<P><STRONG><a name="[62]"></a>HalGPIOInit</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, halgpio.o(i.HalGPIOInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HalGPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numToGPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01Initialize
</UL>

<P><STRONG><a name="[68]"></a>HalGPIOInitialize</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, halgpio.o(i.HalGPIOInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInitialize
</UL>

<P><STRONG><a name="[70]"></a>HalGPIOPoll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, halgpio.o(i.HalGPIOPoll))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalPoll
</UL>

<P><STRONG><a name="[64]"></a>HalGPIOSet</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, halgpio.o(i.HalGPIOSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numToGPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24l01Shutdown
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteReg
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteBuf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01ReadReg
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01ReadBuf
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01TxPacket
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01ModeSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01Initialize
</UL>

<P><STRONG><a name="[66]"></a>HalInitialize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, halcommon.o(i.HalInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = HalInitialize &rArr; HalUartInit &rArr; usartConfiguration &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInitialize
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiInitialize
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOInitialize
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashInitialize
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitialize
</UL>

<P><STRONG><a name="[a1]"></a>HalInterruptsSetEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, halcommon.o(i.HalInterruptsSetEnable))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01TxPacket
</UL>

<P><STRONG><a name="[6d]"></a>HalIwdtFeed</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, halwdt.o(i.HalIwdtFeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HalIwdtFeed
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait
</UL>

<P><STRONG><a name="[6f]"></a>HalPoll</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, halcommon.o(i.HalPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HalPoll
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartPoll
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiPoll
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOPoll
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPoll
</UL>

<P><STRONG><a name="[44]"></a>HalRunningTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, halcommon.o(i.HalRunningTime))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoRecvByte
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoSendListHandle
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartbeatPoll
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMUpdateHeartbeat
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMPoll
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayStartHeartbeat
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerSet
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerExecute
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerPoll
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoPoll
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRecvDataHandle
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataListHandle
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataSave
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataHandle
</UL>

<P><STRONG><a name="[6a]"></a>HalSpiInitialize</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, halspi.o(i.HalSpiInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HalSpiInitialize &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxFIFOThresholdConfig
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInitialize
</UL>

<P><STRONG><a name="[71]"></a>HalSpiPoll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, halspi.o(i.HalSpiPoll))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalPoll
</UL>

<P><STRONG><a name="[78]"></a>HalSpiReadWrite</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, halspi.o(i.HalSpiReadWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HalSpiReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData8
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteReg
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteBuf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01ReadReg
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01ReadBuf
</UL>

<P><STRONG><a name="[67]"></a>HalTimerInitialize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, haltimer.o(i.HalTimerInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HalTimerInitialize &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInitialize
</UL>

<P><STRONG><a name="[d6]"></a>HalTimerPassMs</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, halcommon.o(i.HalTimerPassMs))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>HalUartInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, haluart.o(i.HalUartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = HalUartInit &rArr; usartConfiguration &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartConfiguration
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoInitialize
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInitialize
</UL>

<P><STRONG><a name="[69]"></a>HalUartInitialize</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, haluart.o(i.HalUartInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HalUartInitialize &rArr; usartInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartInit
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInitialize
</UL>

<P><STRONG><a name="[73]"></a>HalUartPoll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, haluart.o(i.HalUartPoll))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalPoll
</UL>

<P><STRONG><a name="[85]"></a>HalUartWrite</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, haluart.o(i.HalUartWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowDataSend
</UL>

<P><STRONG><a name="[6e]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalIwdtFeed
</UL>

<P><STRONG><a name="[89]"></a>MProtoInitialize</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mproto.o(i.MProtoInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = MProtoInitialize &rArr; WMInitialize &rArr; updateNetInfoAndSwitchChannel &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMEventRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitialize
</UL>

<P><STRONG><a name="[8c]"></a>MProtoPoll</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, mproto.o(i.MProtoPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = MProtoPoll &rArr; mprotoFrameSend &rArr; lowDataSend &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netStatusChanged
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoSendListHandle
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameSend
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMPoll
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMIsDeviceOnline
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMGetNetStatus
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPoll
</UL>

<P><STRONG><a name="[82]"></a>MProtoRecvByte</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, mproto.o(i.MProtoRecvByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = MProtoRecvByte &rArr; mprotoFrameHandle &rArr; WMNetUserDataSend &rArr; NetUserDataSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartDataCallback
</UL>

<P><STRONG><a name="[95]"></a>NRF24L01Check</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, nrf24l01.o(i.NRF24L01Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NRF24L01Check &rArr; nrf24l01WriteBuf &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteBuf
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01ReadBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYInitialize
</UL>

<P><STRONG><a name="[98]"></a>NRF24L01DataRecved</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrf24l01.o(i.NRF24L01DataRecved))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NRF24L01DataRecved &rArr; HalGPIOGet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOGet
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRecvDataHandle
</UL>

<P><STRONG><a name="[99]"></a>NRF24L01Initialize</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, nrf24l01.o(i.NRF24L01Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = NRF24L01Initialize &rArr; HalGPIOInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYInitialize
</UL>

<P><STRONG><a name="[9a]"></a>NRF24L01ModeSet</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, nrf24l01.o(i.NRF24L01ModeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24l01Shutdown
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteReg
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteBuf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_us
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSwitchChannel
</UL>

<P><STRONG><a name="[c7]"></a>NRF24L01Poll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, nrf24l01.o(i.NRF24L01Poll))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPoll
</UL>

<P><STRONG><a name="[9e]"></a>NRF24L01RxPacket</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, nrf24l01.o(i.NRF24L01RxPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NRF24L01RxPacket &rArr; nrf24l01ReadBuf &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteReg
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01ReadReg
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01ReadBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRecvDataHandle
</UL>

<P><STRONG><a name="[a0]"></a>NRF24L01TxPacket</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, nrf24l01.o(i.NRF24L01TxPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NRF24L01TxPacket &rArr; nrf24l01WriteBuf &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInterruptsSetEnable
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteReg
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteBuf
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01ReadReg
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOGet
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
</UL>

<P><STRONG><a name="[9b]"></a>NRF24l01Shutdown</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, nrf24l01.o(i.NRF24l01Shutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf24l01WriteReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_us
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01ModeSet
</UL>

<P><STRONG><a name="[7c]"></a>NVIC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f0xx_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartInit
</UL>

<P><STRONG><a name="[a2]"></a>NetBuildStart</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, netlayer.o(i.NetBuildStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = NetBuildStart &rArr; PHYSwitchChannel &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSwitchChannel
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildStart
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
</UL>

<P><STRONG><a name="[a4]"></a>NetBuildStop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, netlayer.o(i.NetBuildStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = NetBuildStop &rArr; PHYSwitchChannel &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSwitchChannel
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildStart
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildDone
</UL>

<P><STRONG><a name="[a5]"></a>NetCoordinationOperate</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, netlayer.o(i.NetCoordinationOperate))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = NetCoordinationOperate &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysUidToMac
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYOperatePacketSend
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataSave
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnDecrypt
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMDeviceCoordination
</UL>

<P><STRONG><a name="[aa]"></a>NetGetMacAddr</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, netlayer.o(i.NetGetMacAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NetGetMacAddr &rArr; PHYGetMac
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYGetMac
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
</UL>

<P><STRONG><a name="[dd]"></a>NetLayerEventRegister</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, netlayer.o(i.NetLayerEventRegister))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
</UL>

<P><STRONG><a name="[ac]"></a>NetLayerInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, netlayer.o(i.NetLayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = NetLayerInit &rArr; PHYInitialize &rArr; NRF24L01Check &rArr; nrf24l01WriteBuf &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPacketHandleCallbackRegiste
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
</UL>

<P><STRONG><a name="[af]"></a>NetLayerPoll</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, netlayer.o(i.NetLayerPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = NetLayerPoll &rArr; PHYPoll &rArr; phyRecvDataHandle &rArr; PHYPacketRecvHandle &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPoll
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMPoll
</UL>

<P><STRONG><a name="[b2]"></a>NetSendHeartbeat</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, netlayer.o(i.NetSendHeartbeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = NetSendHeartbeat &rArr; PHYHeartbeatSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYHeartbeatSend
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMPoll
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayStartHeartbeat
</UL>

<P><STRONG><a name="[b4]"></a>NetSetMacAddr</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, netlayer.o(i.NetSetMacAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NetSetMacAddr &rArr; PHYSetMac &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSetMac
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
</UL>

<P><STRONG><a name="[b6]"></a>NetSetNetaddress</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, netlayer.o(i.NetSetNetaddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = NetSetNetaddress &rArr; PHYSetNetAddr &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSetNetAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
</UL>

<P><STRONG><a name="[b8]"></a>NetSetSegaddress</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, netlayer.o(i.NetSetSegaddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = NetSetSegaddress &rArr; PHYSetSegAddr &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSetSegAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
</UL>

<P><STRONG><a name="[ba]"></a>NetSetSleepMode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, netlayer.o(i.NetSetSleepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NetSetSleepMode &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetSleepMode
</UL>

<P><STRONG><a name="[bb]"></a>NetUserDataSend</STRONG> (Thumb, 80 bytes, Stack size 280 bytes, netlayer.o(i.NetUserDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = NetUserDataSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYOperatePacketSend
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataSave
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnDecrypt
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetUserDataSend
</UL>

<P><STRONG><a name="[bc]"></a>NetbuildAddDevice</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, netlayer.o(i.NetbuildAddDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = NetbuildAddDevice &rArr; PHYEstnetPacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysUidToMac
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYEstnetPacketSend
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
</UL>

<P><STRONG><a name="[be]"></a>NetbuildDelDevice</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, netlayer.o(i.NetbuildDelDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = NetbuildDelDevice &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYOperatePacketSend
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataSave
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnDecrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildDelDevice
</UL>

<P><STRONG><a name="[bf]"></a>NetbuildSearchDevice</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, netlayer.o(i.NetbuildSearchDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = NetbuildSearchDevice &rArr; PHYEstnetPacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYEstnetPacketSend
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchDeviceAgain
</UL>

<P><STRONG><a name="[c0]"></a>NetbuildSearchResponse</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, netlayer.o(i.NetbuildSearchResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = NetbuildSearchResponse &rArr; PHYEstnetPacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYEstnetPacketSend
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayReportDeviceInfo
</UL>

<P><STRONG><a name="[bd]"></a>PHYEstnetPacketSend</STRONG> (Thumb, 136 bytes, Stack size 296 bytes, phylayer.o(i.PHYEstnetPacketSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = PHYEstnetPacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sumCheck
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataSend
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildSearchResponse
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildSearchDevice
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildAddDevice
</UL>

<P><STRONG><a name="[ab]"></a>PHYGetMac</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, phylayer.o(i.PHYGetMac))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PHYGetMac
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetGetMacAddr
</UL>

<P><STRONG><a name="[b3]"></a>PHYHeartbeatSend</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, phylayer.o(i.PHYHeartbeatSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = PHYHeartbeatSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sumCheck
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSendHeartbeat
</UL>

<P><STRONG><a name="[ad]"></a>PHYInitialize</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, phylayer.o(i.PHYInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PHYInitialize &rArr; NRF24L01Check &rArr; nrf24l01WriteBuf &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01Initialize
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01Check
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetLayerInit
</UL>

<P><STRONG><a name="[a9]"></a>PHYOperatePacketSend</STRONG> (Thumb, 128 bytes, Stack size 296 bytes, phylayer.o(i.PHYOperatePacketSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sumCheck
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataSend
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildDelDevice
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetUserDataSend
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCoordinationOperate
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findCacheAndSend
</UL>

<P><STRONG><a name="[ae]"></a>PHYPacketHandleCallbackRegiste</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, phylayer.o(i.PHYPacketHandleCallbackRegiste))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetLayerInit
</UL>

<P><STRONG><a name="[c5]"></a>PHYPacketRecvHandle</STRONG> (Thumb, 464 bytes, Stack size 80 bytes, phylayer.o(i.PHYPacketRecvHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = PHYPacketRecvHandle &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sumCheck
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRecvDataHandle
</UL>

<P><STRONG><a name="[b0]"></a>PHYPoll</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, phylayer.o(i.PHYPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = PHYPoll &rArr; phyRecvDataHandle &rArr; PHYPacketRecvHandle &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01Poll
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRecvDataHandle
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataListHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetLayerPoll
</UL>

<P><STRONG><a name="[b5]"></a>PHYSetMac</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, phylayer.o(i.PHYSetMac))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PHYSetMac &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetMacAddr
</UL>

<P><STRONG><a name="[b7]"></a>PHYSetNetAddr</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, phylayer.o(i.PHYSetNetAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PHYSetNetAddr &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetNetaddress
</UL>

<P><STRONG><a name="[b9]"></a>PHYSetSegAddr</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, phylayer.o(i.PHYSetSegAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PHYSetSegAddr &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetSegaddress
</UL>

<P><STRONG><a name="[a3]"></a>PHYSwitchChannel</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, phylayer.o(i.PHYSwitchChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PHYSwitchChannel &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01ModeSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStop
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStart
</UL>

<P><STRONG><a name="[57]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[59]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[58]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[4b]"></a>RCC_DeInit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[ca]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, stm32f0xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[54]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[56]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_GetSYSCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[50]"></a>RCC_HCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[4c]"></a>RCC_HSEConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_HSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[51]"></a>RCC_PCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_PCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[53]"></a>RCC_PLLCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_PLLCmd))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[52]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_rcc.o(i.RCC_PLLConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLLConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[55]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[4d]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32f0xx_rcc.o(i.RCC_WaitForHSEStartUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_WaitForHSEStartUp
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalClkInit
</UL>

<P><STRONG><a name="[77]"></a>SPI_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiInitialize
</UL>

<P><STRONG><a name="[79]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiReadWrite
</UL>

<P><STRONG><a name="[75]"></a>SPI_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f0xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiInitialize
</UL>

<P><STRONG><a name="[7b]"></a>SPI_ReceiveData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_ReceiveData8))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiReadWrite
</UL>

<P><STRONG><a name="[76]"></a>SPI_RxFIFOThresholdConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_RxFIFOThresholdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiInitialize
</UL>

<P><STRONG><a name="[7a]"></a>SPI_SendData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_spi.o(i.SPI_SendData8))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiReadWrite
</UL>

<P><STRONG><a name="[cc]"></a>SysInitialize</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sys.o(i.SysInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = SysInitialize &rArr; MProtoInitialize &rArr; WMInitialize &rArr; updateNetInfoAndSwitchChannel &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerInitialize
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoInitialize
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f9]"></a>SysMacToUid</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sys.o(i.SysMacToUid))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netOperateFrameHandle
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildFrameHandle
</UL>

<P><STRONG><a name="[ce]"></a>SysPoll</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sys.o(i.SysPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = SysPoll &rArr; MProtoPoll &rArr; mprotoFrameSend &rArr; lowDataSend &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerPoll
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoPoll
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalPoll
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>SysRandom</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sys.o(i.SysRandom))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandomSeed
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataListHandle
</UL>

<P><STRONG><a name="[d0]"></a>SysRandomSeed</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sys.o(i.SysRandomSeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysRandomSeed
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandom
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataListHandle
</UL>

<P><STRONG><a name="[cd]"></a>SysTimerInitialize</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, systimer.o(i.SysTimerInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitialize
</UL>

<P><STRONG><a name="[cf]"></a>SysTimerPoll</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, systimer.o(i.SysTimerPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTimerPoll &rArr; timerExecute
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerExecute
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPoll
</UL>

<P><STRONG><a name="[d3]"></a>SysTimerSet</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, systimer.o(i.SysTimerSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SysTimerSet &rArr; timerExecute
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timerExecute
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchDeviceAgain
</UL>

<P><STRONG><a name="[a6]"></a>SysUidToMac</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sys.o(i.SysUidToMac))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildAddDevice
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCoordinationOperate
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
</UL>

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>TIM1_Config_Ms</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, halwait.o(i.TIM1_Config_Ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM1_Config_Ms &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_init
</UL>

<P><STRONG><a name="[d5]"></a>TIM1_Config_Us</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, halwait.o(i.TIM1_Config_Us))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_init
</UL>

<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, haltimer.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerPassMs
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config_Us
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config_Ms
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[80]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config_Us
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config_Ms
</UL>

<P><STRONG><a name="[7f]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
</UL>

<P><STRONG><a name="[7d]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f0xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalTimerInitialize
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config_Us
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config_Ms
</UL>

<P><STRONG><a name="[1c]"></a>USART1_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, haluart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = USART1_IRQHandler &rArr; HalUartDataCallback &rArr; MProtoRecvByte &rArr; mprotoFrameHandle &rArr; WMNetUserDataSend &rArr; NetUserDataSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RequestCmd
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartDataCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USART2_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, haluart.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = USART2_IRQHandler &rArr; HalUartDataCallback &rArr; MProtoRecvByte &rArr; mprotoFrameHandle &rArr; WMNetUserDataSend &rArr; NetUserDataSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RequestCmd
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartDataCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartWrite
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartConfiguration
</UL>

<P><STRONG><a name="[fc]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartConfiguration
</UL>

<P><STRONG><a name="[87]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartWrite
</UL>

<P><STRONG><a name="[d7]"></a>USART_GetITStatus</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f0xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[fd]"></a>USART_ITConfig</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f0xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartConfiguration
</UL>

<P><STRONG><a name="[da]"></a>USART_Init</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, stm32f0xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartConfiguration
</UL>

<P><STRONG><a name="[fe]"></a>USART_OverrunDetectionConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_OverrunDetectionConfig))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usartConfiguration
</UL>

<P><STRONG><a name="[d8]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>USART_RequestCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_RequestCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[86]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartWrite
</UL>

<P><STRONG><a name="[db]"></a>WMDeviceCoordination</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, wirelessmodule.o(i.WMDeviceCoordination))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = WMDeviceCoordination &rArr; NetCoordinationOperate &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCoordinationOperate
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceAddressFind
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[8b]"></a>WMEventRegister</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wirelessmodule.o(i.WMEventRegister))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoInitialize
</UL>

<P><STRONG><a name="[91]"></a>WMGetNetStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wirelessmodule.o(i.WMGetNetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netStatusChanged
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoPoll
</UL>

<P><STRONG><a name="[dc]"></a>WMGetSearchResult</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wirelessmodule.o(i.WMGetSearchResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WMGetSearchResult
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoEventHandle
</UL>

<P><STRONG><a name="[8a]"></a>WMInitialize</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, wirelessmodule.o(i.WMInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = WMInitialize &rArr; updateNetInfoAndSwitchChannel &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetMacAddr
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetLayerInit
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetLayerEventRegister
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashRead
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMInitialize
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMEventRegister
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildStatusSet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoInitialize
</UL>

<P><STRONG><a name="[92]"></a>WMIsDeviceOnline</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wirelessmodule.o(i.WMIsDeviceOnline))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netStatusChanged
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoPoll
</UL>

<P><STRONG><a name="[e1]"></a>WMNetBuildAddDevice</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, wirelessmodule.o(i.WMNetBuildAddDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = WMNetBuildAddDevice &rArr; NetbuildAddDevice &rArr; PHYEstnetPacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildAddDevice
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStart
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceUidToAddress
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceCreate
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildStatusSet
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerSet
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandomSeed
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandom
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[e3]"></a>WMNetBuildDelDevice</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, wirelessmodule.o(i.WMNetBuildDelDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = WMNetBuildDelDevice &rArr; NetbuildDelDevice &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildDelDevice
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceDel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceAddressFind
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[e4]"></a>WMNetBuildSearch</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, wirelessmodule.o(i.WMNetBuildSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = WMNetBuildSearch &rArr; NetbuildSearchDevice &rArr; PHYEstnetPacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildSearchDevice
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStart
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildStatusSet
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerSet
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandomSeed
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandom
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[e6]"></a>WMNetBuildStart</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wirelessmodule.o(i.WMNetBuildStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WMNetBuildStart &rArr; NetBuildStop &rArr; PHYSwitchChannel &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStop
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStart
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildStatusSet
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
</UL>

<P><STRONG><a name="[e7]"></a>WMNetInfoClear</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wirelessmodule.o(i.WMNetInfoClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = WMNetInfoClear &rArr; updateNetInfoAndSwitchChannel &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashErase
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceInfoClear
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildStatusSet
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[e8]"></a>WMNetUserDataSend</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wirelessmodule.o(i.WMNetUserDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = WMNetUserDataSend &rArr; NetUserDataSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetUserDataSend
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceAddressFind
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[8f]"></a>WMPoll</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, wirelessmodule.o(i.WMPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WMPoll &rArr; NetLayerPoll &rArr; PHYPoll &rArr; phyRecvDataHandle &rArr; PHYPacketRecvHandle &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSendHeartbeat
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetLayerPoll
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMPoll
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoPoll
</UL>

<P><STRONG><a name="[e9]"></a>WMQueryDeviceInfo</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wirelessmodule.o(i.WMQueryDeviceInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WMQueryDeviceInfo &rArr; DMGetRelatedDeviceType
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMGetRelatedDeviceType
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMGetOnlineDeviceType
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[ea]"></a>WMSetMasterSlaveMode</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, wirelessmodule.o(i.WMSetMasterSlaveMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = WMSetMasterSlaveMode &rArr; updateNetInfoAndSwitchChannel &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetGetMacAddr
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildStatusSet
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandomSeed
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandom
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[eb]"></a>WMSetModuleType</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, wirelessmodule.o(i.WMSetModuleType))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WMSetModuleType &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[ec]"></a>WMSetSleepMode</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, wirelessmodule.o(i.WMSetSleepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WMSetSleepMode &rArr; NetSetSleepMode &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetSleepMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[ed]"></a>__0printf$8</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10e]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[45]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoRecvByte
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowDataSend
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateDeviceInfoToFlash
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildSearchDevice
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetSleepMode
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetMacAddr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStop
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStart
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMUpdateHeartbeat
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetSleepMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetModuleType
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildDelDevice
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildDone
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dmEventHandle
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPacketRecvHandle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSwitchChannel
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSetSegAddr
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSetNetAddr
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYSetMac
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYInitialize
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataSave
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnDecrypt
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_IRQHandler
</UL>

<P><STRONG><a name="[f7]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wirelessmodule.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoEventHandle
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numToGPIO
</UL>

<P><STRONG><a name="[10f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[110]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[111]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[29]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, halcommon.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fputc &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[c6]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoSendListHandle
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPacketRecvHandle
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataListHandle
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataHandle
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findCacheAndSend
</UL>

<P><STRONG><a name="[f3]"></a>hal_wait</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, halwait.o(i.hal_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalIwdtFeed
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_check
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_us
</UL>

<P><STRONG><a name="[f4]"></a>hal_wait_check</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, halwait.o(i.hal_wait_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_init
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait
</UL>

<P><STRONG><a name="[f5]"></a>hal_wait_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, halwait.o(i.hal_wait_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config_Us
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_Config_Ms
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_us
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_check
</UL>

<P><STRONG><a name="[9d]"></a>hal_wait_us</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, halwait.o(i.hal_wait_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24l01Shutdown
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01ModeSet
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
</UL>

<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = main &rArr; SysInitialize &rArr; MProtoInitialize &rArr; WMInitialize &rArr; updateNetInfoAndSwitchChannel &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPoll
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[f8]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameSend
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataSend
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netSleepDevDataSave
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d2]"></a>timerExecute</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, systimer.o(i.timerExecute))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timerExecute
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerSet
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerPoll
</UL>

<P><STRONG><a name="[2a]"></a>delayReportDeviceInfo</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wirelessmodule.o(i.delayReportDeviceInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = delayReportDeviceInfo &rArr; NetbuildSearchResponse &rArr; PHYEstnetPacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildSearchResponse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessmodule.o(i.wmNetlayerEventHandle)
</UL>
<P><STRONG><a name="[2b]"></a>delayStartHeartbeat</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wirelessmodule.o(i.delayStartHeartbeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = delayStartHeartbeat &rArr; NetSendHeartbeat &rArr; PHYHeartbeatSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSendHeartbeat
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessmodule.o(i.wmNetlayerEventHandle)
</UL>
<P><STRONG><a name="[26]"></a>dmEventHandle</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, wirelessmodule.o(i.dmEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dmEventHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessmodule.o(i.WMInitialize)
</UL>
<P><STRONG><a name="[27]"></a>netBuildDone</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, wirelessmodule.o(i.netBuildDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = netBuildDone &rArr; NetBuildStop &rArr; PHYSwitchChannel &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetBuildStop
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildStatusSet
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> wirelessmodule.o(i.WMNetBuildAddDevice)
<LI> wirelessmodule.o(i.searchDeviceAgain)
</UL>
<P><STRONG><a name="[df]"></a>netBuildStatusSet</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wirelessmodule.o(i.netBuildStatusSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = netBuildStatusSet
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetInfoClear
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildStart
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildDone
</UL>

<P><STRONG><a name="[28]"></a>searchDeviceAgain</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wirelessmodule.o(i.searchDeviceAgain))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = searchDeviceAgain &rArr; NetbuildSearchDevice &rArr; PHYEstnetPacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildSearchDevice
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessmodule.o(i.WMNetBuildSearch)
</UL>
<P><STRONG><a name="[fb]"></a>searchDeviceInfoAdd</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, wirelessmodule.o(i.searchDeviceInfoAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = searchDeviceInfoAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
</UL>

<P><STRONG><a name="[e0]"></a>updateNetInfoAndSwitchChannel</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wirelessmodule.o(i.updateNetInfoAndSwitchChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = updateNetInfoAndSwitchChannel &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetSegaddress
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSetNetaddress
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashWrite
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashErase
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildStart
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetInfoClear
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMInitialize
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wmNetlayerEventHandle
</UL>

<P><STRONG><a name="[25]"></a>wmNetlayerEventHandle</STRONG> (Thumb, 606 bytes, Stack size 64 bytes, wirelessmodule.o(i.wmNetlayerEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = wmNetlayerEventHandle &rArr; DMDeviceSet &rArr; updateDeviceInfoToFlash &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetSendHeartbeat
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMUpdateHeartbeat
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceDel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceAddressFind
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateNetInfoAndSwitchChannel
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;searchDeviceInfoAdd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildStatusSet
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTimerSet
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysUidToMac
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandomSeed
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandom
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wirelessmodule.o(i.WMInitialize)
</UL>
<P><STRONG><a name="[41]"></a>heartbeatPoll</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, devicesmanager.o(i.heartbeatPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = heartbeatPoll
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMPoll
</UL>

<P><STRONG><a name="[37]"></a>updateDeviceInfoToFlash</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, devicesmanager.o(i.updateDeviceInfoToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = updateDeviceInfoToFlash &rArr; HalFlashWrite &rArr; flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashWrite
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashErase
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceDel
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceCreate
</UL>

<P><STRONG><a name="[93]"></a>checksum</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mproto.o(i.checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoRecvByte
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameSend
</UL>

<P><STRONG><a name="[f1]"></a>coordinationResult</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mproto.o(i.coordinationResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = coordinationResult &rArr; mprotoFrameSend &rArr; lowDataSend &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameSend
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
</UL>

<P><STRONG><a name="[f6]"></a>lowDataSend</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, mproto.o(i.lowDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lowDataSend &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartWrite
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoSendListHandle
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameSend
</UL>

<P><STRONG><a name="[21]"></a>mprotoEventHandle</STRONG> (Thumb, 152 bytes, Stack size 280 bytes, mproto.o(i.mprotoEventHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = mprotoEventHandle &rArr; mprotoFrameSend &rArr; lowDataSend &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameSend
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceAddressFind
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMGetSearchResult
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mproto.o(i.MProtoInitialize)
</UL>
<P><STRONG><a name="[94]"></a>mprotoFrameHandle</STRONG> (Thumb, 284 bytes, Stack size 296 bytes, mproto.o(i.mprotoFrameHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048<LI>Call Chain = mprotoFrameHandle &rArr; WMNetUserDataSend &rArr; NetUserDataSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameSend
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coordinationResult
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetSleepMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetModuleType
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMSetMasterSlaveMode
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMQueryDeviceInfo
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetUserDataSend
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetInfoClear
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildStart
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildSearch
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildDelDevice
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMNetBuildAddDevice
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMDeviceCoordination
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoRecvByte
</UL>

<P><STRONG><a name="[8d]"></a>mprotoFrameSend</STRONG> (Thumb, 136 bytes, Stack size 280 bytes, mproto.o(i.mprotoFrameSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = mprotoFrameSend &rArr; lowDataSend &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowDataSend
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoFrameHandle
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mprotoEventHandle
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coordinationResult
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoPoll
</UL>

<P><STRONG><a name="[8e]"></a>mprotoSendListHandle</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, mproto.o(i.mprotoSendListHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mprotoSendListHandle &rArr; lowDataSend &rArr; HalUartWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowDataSend
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoPoll
</UL>

<P><STRONG><a name="[90]"></a>netStatusChanged</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mproto.o(i.netStatusChanged))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = netStatusChanged
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMIsDeviceOnline
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WMGetNetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoPoll
</UL>

<P><STRONG><a name="[5e]"></a>flashWrite</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, halflash.o(i.flashWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = flashWrite &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalFlashWrite
</UL>

<P><STRONG><a name="[60]"></a>numToGPIO</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, halgpio.o(i.numToGPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOInit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOGet
</UL>

<P><STRONG><a name="[81]"></a>HalUartDataCallback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, haluart.o(i.HalUartDataCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1072<LI>Call Chain = HalUartDataCallback &rArr; MProtoRecvByte &rArr; mprotoFrameHandle &rArr; WMNetUserDataSend &rArr; NetUserDataSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MProtoRecvByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[83]"></a>usartConfiguration</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, haluart.o(i.usartConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = usartConfiguration &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OverrunDetectionConfig
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInit
</UL>

<P><STRONG><a name="[84]"></a>usartInit</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, haluart.o(i.usartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usartInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalUartInitialize
</UL>

<P><STRONG><a name="[f2]"></a>findCacheAndSend</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, netlayer.o(i.findCacheAndSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = findCacheAndSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYOperatePacketSend
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netOperateFrameHandle
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netHeartbeatHandle
</UL>

<P><STRONG><a name="[23]"></a>netBuildFrameHandle</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, netlayer.o(i.netBuildFrameHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = netBuildFrameHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysMacToUid
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netThrowEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netlayer.o(i.NetLayerInit)
</UL>
<P><STRONG><a name="[a7]"></a>netEnDecrypt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, netlayer.o(i.netEnDecrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = netEnDecrypt &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMDeviceAddressFind
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildDelDevice
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetUserDataSend
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCoordinationOperate
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netOperateFrameHandle
</UL>

<P><STRONG><a name="[22]"></a>netHeartbeatHandle</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, netlayer.o(i.netHeartbeatHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = netHeartbeatHandle &rArr; findCacheAndSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netThrowEvent
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findCacheAndSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netlayer.o(i.NetLayerInit)
</UL>
<P><STRONG><a name="[24]"></a>netOperateFrameHandle</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, netlayer.o(i.netOperateFrameHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = netOperateFrameHandle &rArr; findCacheAndSend &rArr; PHYOperatePacketSend &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysMacToUid
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netThrowEvent
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnDecrypt
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findCacheAndSend
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netlayer.o(i.NetLayerInit)
</UL>
<P><STRONG><a name="[b1]"></a>netSleepDevDataHandle</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, netlayer.o(i.netSleepDevDataHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = netSleepDevDataHandle &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetLayerPoll
</UL>

<P><STRONG><a name="[a8]"></a>netSleepDevDataSave</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, netlayer.o(i.netSleepDevDataSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = netSleepDevDataSave &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetbuildDelDevice
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetUserDataSend
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NetCoordinationOperate
</UL>

<P><STRONG><a name="[fa]"></a>netThrowEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, netlayer.o(i.netThrowEvent))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netOperateFrameHandle
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netHeartbeatHandle
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netBuildFrameHandle
</UL>

<P><STRONG><a name="[c4]"></a>lowLevelDataSend</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, phylayer.o(i.lowLevelDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01TxPacket
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01ModeSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_wait_us
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPacketRecvHandle
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyDataListHandle
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYOperatePacketSend
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYHeartbeatSend
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYEstnetPacketSend
</UL>

<P><STRONG><a name="[c8]"></a>phyDataListHandle</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, phylayer.o(i.phyDataListHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = phyDataListHandle &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandomSeed
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysRandom
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowLevelDataSend
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPoll
</UL>

<P><STRONG><a name="[c3]"></a>phyDataSend</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, phylayer.o(i.phyDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = phyDataSend &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYOperatePacketSend
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYEstnetPacketSend
</UL>

<P><STRONG><a name="[c9]"></a>phyRecvDataHandle</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, phylayer.o(i.phyRecvDataHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = phyRecvDataHandle &rArr; PHYPacketRecvHandle &rArr; lowLevelDataSend &rArr; NRF24L01ModeSet &rArr; NRF24l01Shutdown &rArr; hal_wait_us &rArr; hal_wait &rArr; hal_wait_check &rArr; hal_wait_init &rArr; TIM1_Config_Us &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalRunningTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01RxPacket
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01DataRecved
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPacketRecvHandle
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPoll
</UL>

<P><STRONG><a name="[c1]"></a>sumCheck</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, phylayer.o(i.sumCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sumCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYPacketRecvHandle
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYOperatePacketSend
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYHeartbeatSend
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PHYEstnetPacketSend
</UL>

<P><STRONG><a name="[97]"></a>nrf24l01ReadBuf</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, nrf24l01.o(i.nrf24l01ReadBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nrf24l01ReadBuf &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiReadWrite
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01RxPacket
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01Check
</UL>

<P><STRONG><a name="[9f]"></a>nrf24l01ReadReg</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, nrf24l01.o(i.nrf24l01ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nrf24l01ReadReg &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiReadWrite
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01TxPacket
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01RxPacket
</UL>

<P><STRONG><a name="[96]"></a>nrf24l01WriteBuf</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, nrf24l01.o(i.nrf24l01WriteBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nrf24l01WriteBuf &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiReadWrite
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01TxPacket
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01ModeSet
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01Check
</UL>

<P><STRONG><a name="[9c]"></a>nrf24l01WriteReg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, nrf24l01.o(i.nrf24l01WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nrf24l01WriteReg &rArr; HalGPIOSet &rArr; numToGPIO &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalSpiReadWrite
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalGPIOSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24l01Shutdown
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01TxPacket
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01RxPacket
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NRF24L01ModeSet
</UL>

<P><STRONG><a name="[ee]"></a>_printf_core</STRONG> (Thumb, 1020 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[f0]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ef]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
